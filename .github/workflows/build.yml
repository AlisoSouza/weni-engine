# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  SECRET_KEY: "SK"
  DEFAULT_DATABASE: "postgres://postgres:postgres@localhost:5432/postgres"
  OIDC_RP_SERVER_URL: ""
  OIDC_RP_REALM_NAME: ""
  OIDC_RP_CLIENT_ID: ""
  OIDC_RP_CLIENT_SECRET: ""
  OIDC_OP_AUTHORIZATION_ENDPOINT: ""
  OIDC_OP_TOKEN_ENDPOINT: ""
  OIDC_OP_USER_ENDPOINT: ""
  OIDC_OP_JWKS_ENDPOINT: ""
  OIDC_RP_SIGN_ALGO: ""
  OIDC_OP_LOGOUT_ENDPOINT: ""
  BILLING_COST_PER_WHATSAPP: 199
  BILLING_TEST_MODE: True


jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.6.15-bullseye

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Connect to PostgreSQL
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
        run: |
          pip install poetry
          poetry config virtualenvs.create false --local
          poetry install
      - name: Test DB
        run: python manage.py test
