# Generated by Django 2.2.18 on 2021-02-24 14:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import timezone_field.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=36, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'dashboard newsletter',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Organization UUID')),
                ('name', models.CharField(max_length=128, verbose_name='Organization Name')),
                ('description', models.TextField(verbose_name='Organization Description')),
                ('owner', models.ForeignKey(help_text='Organization Owner', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'organization',
            },
        ),
        migrations.CreateModel(
            name='OrgProject',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Organization UUID')),
                ('name', models.CharField(max_length=128, verbose_name='Project Name')),
                ('timezone', timezone_field.fields.TimeZoneField(verbose_name='Timezone')),
                ('date_format', models.CharField(choices=[('D', 'DD-MM-YYYY'), ('M', 'MM-DD-YYYY')], default='D', help_text='Whether day comes first or month comes first in dates', max_length=1, verbose_name='Date Format')),
                ('slug', models.SlugField(blank=True, error_messages={'unique': 'This slug is not available'}, max_length=255, null=True, unique=True, verbose_name='Slug')),
                ('is_anon', models.BooleanField(default=False, help_text='Whether this organization anonymizes the phone numbers of contacts within it')),
                ('is_flagged', models.BooleanField(default=False, help_text='Whether this organization is currently flagged.')),
                ('is_suspended', models.BooleanField(default=False, help_text='Whether this organization is currently suspended.')),
                ('primary_language', models.IntegerField(blank=True, help_text='The primary language will be used for contacts with no language preference.', null=True)),
                ('brand', models.CharField(help_text='The brand used in emails', max_length=128, verbose_name='Brand')),
                ('flow_org_id', models.UUIDField(default=uuid.uuid4, verbose_name='UUID of the organization without service flow')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Organization')),
            ],
            options={
                'verbose_name': 'organization project',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True, verbose_name='service url')),
                ('status', models.BooleanField(default=False, verbose_name='status service')),
                ('type_service', models.CharField(choices=[('type_service_flows', 'Flows service'), ('type_service_inteligence', 'Inteligence Service'), ('type_service_chat', 'Chat Service')], default='type_service_chat', max_length=50, verbose_name='type service')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_updated', models.DateTimeField(auto_now_add=True, verbose_name='last updated')),
                ('default', models.BooleanField(default=False, verbose_name='service default')),
            ],
            options={
                'verbose_name': 'service',
            },
        ),
        migrations.CreateModel(
            name='ServiceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('org_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_status', to='common.OrgProject')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Service')),
            ],
            options={
                'verbose_name': 'service status',
                'ordering': ['created_at'],
                'unique_together': {('service', 'org_project')},
            },
        ),
    ]
