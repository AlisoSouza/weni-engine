# use container-based Ubuntu Trusty
dist: bionic
sudo: true

language: python
python:
  - "3.6.8"

services:
  - docker


before_install:
  # install the chosen PG version
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install postgresql-11 postgresql-client-11
  - sudo -E sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo -E sed -i 's/port = 5433/port = 5432/' /etc/postgresql/*/main/postgresql.conf

  # give PG some time to finish setup
  - sleep 10

  # stop any running postgres versions
  - sudo -E service postgresql stop 10
  - sudo -E ps axuwww | grep -i postg

  # possibly a Travis bug but data directory sometimes not initialized
  - if [ ! -d /var/ramfs/postgresql/11/main ]; then sudo -u postgres /usr/lib/postgresql/11/bin/initdb -D /var/ramfs/postgresql/11/main; fi

  # start the chosen PG version
  - sudo -E systemctl -l restart postgresql@11-main
  - sudo -E systemctl -l status postgresql@11-main

before_script:
  # setup test database
  - psql -U postgres -c "CREATE USER connect WITH PASSWORD 'connect';"
  - psql -U postgres -c "ALTER ROLE connect WITH SUPERUSER;"
  - psql -U connect postgres -c "CREATE DATABASE connect;"

install:
  - pip install poetry==1.1.12
  - poetry shell
  - poetry install --no-interaction --no-ansi
  - pip install coveralls

env:
  global:
    - SECRET_KEY=SK
    - DEFAULT_DATABASE="postgres://connect:connect@localhost:5432/connect"
    - OIDC_RP_SERVER_URL=
    - OIDC_RP_REALM_NAME=
    - OIDC_RP_CLIENT_ID=
    - OIDC_RP_CLIENT_SECRET=
    - OIDC_OP_AUTHORIZATION_ENDPOINT=
    - OIDC_OP_TOKEN_ENDPOINT=
    - OIDC_OP_USER_ENDPOINT=
    - OIDC_OP_JWKS_ENDPOINT=
    - OIDC_RP_SIGN_ALGO=
    - OIDC_OP_LOGOUT_ENDPOINT=
    - BILLING_COST_PER_WHATSAPP=0.0
    - BILLING_TEST_MODE=True
    - secure: "KCQWp6w1c5KfzSnN0/nGfHMHFqEk9AJBSjBXI3rBoHDtTTBkX5UoEPVi6ikALtySkeNmRShjPuQFQIfYq4nVfP7+I1VpL7wnVaBGOJkWzYtiajDThUI4SQPTwHl0FTQjSHnT7FoiL1ludF25fA8eBDgnhjvrpIMTGTcrVXDXMhwZDbmgv7BslJm2t4YrX2rQR8AajDEnbJ6PLlyiXFCgJP/vyD8Ip9YZvtsZeWtFA+3LXYfRj89ja7CU7tLlLLwOKloHXqgvKt66HCjl4FQSaqX+jKgW9YnptfelABTo6vN7Bf3zSAc/CqPCADo0aKqFzb2k8IcYicpocwz8iuQw/oaRNasWDS3juoJF2/cq5fFaAFq+JYzCgeaAguLC8/p4amhJEkTmrCCMlZ/++p2fP/BVLvlkl0FhiiGE6KX3ZIBvaG0L/V5/aatbLPUX0yAz6zrDMdCeanfbJm9PA8iVgDMi1I148TR7q7ZIqTbFR2hLSPcqP3DOhdKzA3tNxiKnbIiJtfsQjVITr1lfxHojd360azIwTqRoRq/DE1nQpIjIIJ23PIKNx8K1rOiw2Ji7uxNwvokb+cKDvtmD7Te6wLmw7bnOLe/tnT1Fv14dMH5FKgAUir/ZdOKx/4V33j5YBRBljFRK54myz0W8tCG9BlFLLd01mew0pIS7flpWQKE="


script:
  - python manage.py migrate
  - python manage.py collectstatic --noinput
  - flake8
  - travis_wait coverage run manage.py test

after_success:
  - coveralls
